// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model FrontApp {
  id      Int     @id @default(autoincrement())
  name    String  @unique
  api_key String  @unique

}

//----------------------------------------------------------------------------------------
// from start we should register (seed) admin account like initial owner of all NFTs
//----------------------------------------------------------------------------------------
// Raf@near.org

enum Role {
  USER
  ADMIN
}

model User {
  id    Int     @id @default(autoincrement())
  name   String  @unique
  email  String  @unique
  phone  String  @unique
  role   Role    @default(USER)
  NearWallets    Wallet[]
  Nfts           Nft[]
}

model Wallet {
  id          Int     @id @default(autoincrement())
  wallet      String  @unique
  public_key  String  @unique
  seed_phrase String  @unique
  user        User    @relation(fields: [userId], references: [id])
  userId      Int
}

model NftSeries {
  id             Int     @id @default(autoincrement())
  series_name    String  @unique
  quantity       Int
  Nfts           Nft[]
}

enum Status {
  MINTED
  SENT
  RECEIVED
}

model Nft {
  id          Int     @id @default(autoincrement())
  filename    String
  title       String
  description String
  size        Int

  series      NftSeries @relation(fields: [seriesId], references: [id])
  seriesId    Int

  status      Status    @default(NEW)

  creator     User      @relation(fields: [creatorId], references: [id])
  walletId    Int

  owner       User      @relation(fields: [ownerId], references: [id])
  ownerId     Int
}

enum Status {
  NEW
  SENT
  RECEIVED
}

model NftMint {
  id          Int     @id @default(autoincrement())
  nftId       Int
  status      Status  @default(NEW)
  owner       User    @relation(fields: [userId], references: [id])
  userId      Int
  nftId       Int
}

model NftLog {
  id          Int     @id @default(autoincrement())
  nft         Nft     @relation(fields: [nftId], references: [id])
  nftId       Int

  date        DateTime

  status      Status  @default(NEW)
  owner       User    @relation(fields: [userId], references: [id])
  userId      Int
}