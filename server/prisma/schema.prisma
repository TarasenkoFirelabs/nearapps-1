// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Activity {
  ACTIVE
  BLOCKED
}

model FrontApp {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  api_key    String    @unique
  active     Boolean   @default(ACTIVE)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now())
}

//----------------------------------------------------------------------------------------
// from start we should register (seed) admin account like initial owner of all NFTs
//----------------------------------------------------------------------------------------
// Ross@near.org

enum Role {
  USER
  ADMIN
}

model User {
  id           Int       @id @default(autoincrement())
  name         String    @unique
  email        String    @unique
  phone        String    @unique
  role         Role      @default(USER)

  frontApp     FrontApp  @relation(fields: [frontId], references: [id])
  frontId      Int

  NearWallets  Wallet[]
  Nfts         Nft[]

  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @default(now())
}

model Wallet {
  id           Int       @id @default(autoincrement())
  wallet       String    @unique
  public_key   String    @unique
  seed_phrase  String    @unique
  user         User      @relation(fields: [userId], references: [id])
  userId       Int
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @default(now())
}

model NftSeries {
  id           Int       @id @default(autoincrement())
  series_name  String    @unique
  quantity     Int
  Nfts         Nft[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @default(now())
}

enum Status {
  MINTED
  SENT
  RECEIVED
}

model Nft {
  id           Int       @id @default(autoincrement())
  filename     String
  title        String
  description  String
  size         Int
  status       Status    @default(MINTED)
  token        String    @unique

  series       NftSeries @relation(fields: [seriesId], references: [id])
  seriesId     Int

  creator      Wallet    @relation(fields: [walletId], references: [id])
  walletId     Int

  owner        Wallet    @relation(fields: [ownerId], references: [id])
  ownerWId     Int

  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @default(now())
}

model NftLog {
  id           Int       @id @default(autoincrement())
  nft          Nft       @relation(fields: [nftId], references: [id])
  nftId        Int

  status       Status    @default(MINTED)
  status_was   Status
  owner        Wallet    @relation(fields: [ownerId], references: [id])
  ownerWId     Int
  createdAt    DateTime  @default(now())
}